spring:
  cloud:
    inetutils:
      ignored-interfaces: 
        - lo
    nacos:
      discovery:
        group: TEST_GROUP
        username: 
        password: 
        enabled: true
        register-enabled: true
        namespace: 
        server-addr: 192.168.1.1:9999,192.168.1.2:9999,192.168.1.3:9999
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/test
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: 
    password: 
    initial-size: 10 #连接池的配置信息
    min-idle: 10
    max-active: 100
    max-wait: 2000 # 配置获取连接等待超时的时间
    time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
    validation-query: SELECT 1 FROM DUAL
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false
    pool-prepared-statements: true # 打开PSCache，并且指定每个连接上PSCache的大小
    max-pool-prepared-statement-per-connection-size: 20
    filters: stat,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
  data:
    redis: 
      database: 0 # Redis数据库索引（默认为0）
      host: 127.0.0.1 # Redis服务器地址
      port: 6379 # Redis服务器连接端口
      password:  # Redis服务器连接密码（默认为空）
      lettuce:
        pool:
          max-total:  100 # 连接池最大连接数（使用负值表示没有限制）
          max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 50 # 连接池中的最大空闲连接
          min-idle: 10 # 连接池中的最小空闲连接
          max-active: 500